{
  "query": "https://api.npms.io/v2/package/remo.io",
  "result": {
    "analyzedAt": "2019-08-11T00:16:16.075Z",
    "collected": {
      "metadata": {
        "name": "remo.io",
        "scope": "unscoped",
        "version": "0.2.0",
        "description": "An intuitive, robust and efficient RPC library for Node.js and the browser.",
        "keywords": [
          "rpc",
          "rmi",
          "realtime",
          "socket",
          "websocket"
        ],
        "date": "2019-08-10T07:35:19.435Z",
        "author": {
          "name": "Daniel Pauli",
          "email": "dapaulid@gmail.com"
        },
        "publisher": {
          "username": "dapaulid",
          "email": "dapaulid+npm@gmail.com"
        },
        "maintainers": [
          {
            "username": "dapaulid",
            "email": "dapaulid+npm@gmail.com"
          }
        ],
        "repository": {
          "type": "git",
          "url": "git+https://github.com/dapaulid/remo.io.git"
        },
        "links": {
          "npm": "https://www.npmjs.com/package/remo.io",
          "homepage": "https://github.com/dapaulid/remo.io#readme",
          "repository": "https://github.com/dapaulid/remo.io",
          "bugs": "https://github.com/dapaulid/remo.io/issues"
        },
        "license": "MIT",
        "dependencies": {
          "debug": "^4.1.1",
          "socket.io": "^2.2.0"
        },
        "devDependencies": {
          "@types/debug": "^4.1.5",
          "@types/socket.io": "^2.1.2",
          "@types/socket.io-client": "^1.4.32",
          "@types/ws": "^6.0.1",
          "browserify": "^16.3.0",
          "express": "^4.17.1",
          "gulp": "^4.0.2",
          "gulp-sourcemaps": "^2.6.5",
          "gulp-tslint": "^8.1.4",
          "gulp-typescript": "^5.0.1",
          "tslint": "^5.18.0",
          "typescript": "^3.5.3",
          "vinyl-buffer": "^1.0.1",
          "vinyl-source-stream": "^2.0.0"
        },
        "releases": [
          {
            "from": "2019-07-12T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 6
          },
          {
            "from": "2019-05-13T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 6
          },
          {
            "from": "2019-02-12T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 6
          },
          {
            "from": "2018-08-11T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 6
          },
          {
            "from": "2017-08-11T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 6
          }
        ],
        "hasTestScript": true,
        "readme": "[![NPM version](https://badge.fury.io/js/remo.io.svg)](https://www.npmjs.com/package/remo.io)\n\n# Remo.IO\nAn intuitive, robust and efficient RPC library for Node.js and the browser.\n\n## Purpose\n\nThis library allows to expose any functions on your Node.js server so that they can be called from the browser just as if they were normal, local JavaScript functions. Callback functions will be passed as reference, allowing the server in turn to call functions directly on the client.\n\nRemo.IO aims to handle serialization of arbitrary objects (passed by value), take care of session and reconnection handling as well as properly propagate errors between server and client. It uses [Socket.IO](https://www.npmjs.com/package/socket.io) for transport.\n\n## Installation\n```\nnpm install remo.io\n```\n\n## Usage\n\n### Server\n\n```js\nconst remo = require('remo.io');\n\n// define functions the server should expose to the client\nconst api = {\n    hello: function (what) {\n        console.log(\"Hello \" + what + \" from client!\");\n        return \"Hello from server!\";\n    },\n    // you can also expose builtins...\n    log: console.log,\n    // ... or even all functions of a module\n    fs\n}\nconst remoServer = remo.createServer({ httpServer, api });\n```\n\n### Client\n\n```js\n// call a remote function on our server\nremo.getServer().then((server) =>{\n    \n    server.api.hello(\"world\").then((result) => {\n        console.log(\"Function on server completed:\", result);\n    }).catch((err) => {\n        console.error(\"Function on server failed:\", err);\n    });\n        \n})\n```\n\nFor a full example, do the following:\n\n```bash\ngit clone https://github.com/dapaulid/remo.io\ncd remo.io\nnpm install\nnpm run example\n```\n\n## Debugging\n\nRemo.io uses [debug](https://www.npmjs.com/package/debug) to output traces, which allows to selectively enable debug output.\n\nFor the server, set the DEBUG environment variable before starting your app:\n```bash\nDEBUG=remo.io:* node myapp\n```\n\nIn the browser, set the following variable using the developer console and reload your app:\n```js\nlocalStorage.debug = \"remo.io:*\"\n```"
      },
      "npm": {
        "downloads": [
          {
            "from": "2019-08-10T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 0
          },
          {
            "from": "2019-08-04T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 63
          },
          {
            "from": "2019-07-12T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 63
          },
          {
            "from": "2019-05-13T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 63
          },
          {
            "from": "2019-02-12T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 63
          },
          {
            "from": "2018-08-11T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 63
          }
        ],
        "dependentsCount": 0,
        "starsCount": 0
      },
      "github": {
        "starsCount": 0,
        "forksCount": 0,
        "subscribersCount": 1,
        "issues": {
          "count": 0,
          "openCount": 0,
          "distribution": {
            "3600": 0,
            "10800": 0,
            "32400": 0,
            "97200": 0,
            "291600": 0,
            "874800": 0,
            "2624400": 0,
            "7873200": 0,
            "23619600": 0,
            "70858800": 0,
            "212576400": 0
          },
          "isDisabled": false
        },
        "contributors": [
          {
            "username": "dapaulid",
            "commitsCount": 59
          }
        ],
        "commits": [
          {
            "from": "2019-08-04T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 23
          },
          {
            "from": "2019-07-12T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 59
          },
          {
            "from": "2019-05-13T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 59
          },
          {
            "from": "2019-02-12T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 59
          },
          {
            "from": "2018-08-11T00:00:00.000Z",
            "to": "2019-08-11T00:00:00.000Z",
            "count": 59
          }
        ]
      },
      "source": {
        "files": {
          "readmeSize": 2079,
          "testsSize": 0
        },
        "linters": [
          "tslint"
        ]
      }
    },
    "evaluation": {
      "quality": {
        "carefulness": 0.42,
        "tests": 0,
        "health": 1,
        "branding": 0
      },
      "popularity": {
        "communityInterest": 2,
        "downloadsCount": 21,
        "downloadsAcceleration": 0.5261986301369863,
        "dependentsCount": 0
      },
      "maintenance": {
        "releasesFrequency": 1,
        "commitsFrequency": 1,
        "openIssues": 0.7,
        "issuesDistribution": 0.7
      }
    },
    "score": {
      "final": 0.4883103664470413,
      "detail": {
        "quality": 0.4406297994254149,
        "popularity": 0.021123990819931934,
        "maintenance": 0.9963657995212591
      }
    }
  }
}